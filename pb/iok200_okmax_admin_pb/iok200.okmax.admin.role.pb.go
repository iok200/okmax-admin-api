// Code generated by protoc-gen-go. DO NOT EDIT.
// source: iok200.okmax.admin.role.proto

package iok200_okmax_admin_pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	iok200_blada_pb "github.com/iok200/blada/pb/iok200_blada_pb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RoleCreateRequest struct {
	// 角色信息
	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// 权限ID
	AuthIds              []string `protobuf:"bytes,2,rep,name=authIds,proto3" json:"authIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleCreateRequest) Reset()         { *m = RoleCreateRequest{} }
func (m *RoleCreateRequest) String() string { return proto.CompactTextString(m) }
func (*RoleCreateRequest) ProtoMessage()    {}
func (*RoleCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18026eeb4b7aa985, []int{0}
}

func (m *RoleCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleCreateRequest.Unmarshal(m, b)
}
func (m *RoleCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleCreateRequest.Marshal(b, m, deterministic)
}
func (m *RoleCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleCreateRequest.Merge(m, src)
}
func (m *RoleCreateRequest) XXX_Size() int {
	return xxx_messageInfo_RoleCreateRequest.Size(m)
}
func (m *RoleCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleCreateRequest proto.InternalMessageInfo

func (m *RoleCreateRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *RoleCreateRequest) GetAuthIds() []string {
	if m != nil {
		return m.AuthIds
	}
	return nil
}

type RoleUpdateRequest struct {
	// 角色信息
	Role                 *Role    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleUpdateRequest) Reset()         { *m = RoleUpdateRequest{} }
func (m *RoleUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*RoleUpdateRequest) ProtoMessage()    {}
func (*RoleUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18026eeb4b7aa985, []int{1}
}

func (m *RoleUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleUpdateRequest.Unmarshal(m, b)
}
func (m *RoleUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleUpdateRequest.Marshal(b, m, deterministic)
}
func (m *RoleUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleUpdateRequest.Merge(m, src)
}
func (m *RoleUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_RoleUpdateRequest.Size(m)
}
func (m *RoleUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleUpdateRequest proto.InternalMessageInfo

func (m *RoleUpdateRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type RoleQueryRequest struct {
	Page *iok200_blada_pb.PageRequest `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	// 角色名
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	// 角色描述
	RoleInfo             string   `protobuf:"bytes,3,opt,name=roleInfo,proto3" json:"roleInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleQueryRequest) Reset()         { *m = RoleQueryRequest{} }
func (m *RoleQueryRequest) String() string { return proto.CompactTextString(m) }
func (*RoleQueryRequest) ProtoMessage()    {}
func (*RoleQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18026eeb4b7aa985, []int{2}
}

func (m *RoleQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleQueryRequest.Unmarshal(m, b)
}
func (m *RoleQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleQueryRequest.Marshal(b, m, deterministic)
}
func (m *RoleQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleQueryRequest.Merge(m, src)
}
func (m *RoleQueryRequest) XXX_Size() int {
	return xxx_messageInfo_RoleQueryRequest.Size(m)
}
func (m *RoleQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleQueryRequest proto.InternalMessageInfo

func (m *RoleQueryRequest) GetPage() *iok200_blada_pb.PageRequest {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *RoleQueryRequest) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *RoleQueryRequest) GetRoleInfo() string {
	if m != nil {
		return m.RoleInfo
	}
	return ""
}

type RoleQueryResult struct {
	State *iok200_blada_pb.ResultState `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Page  *iok200_blada_pb.PageResult  `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
	// 角色列表
	Roles                []*Role  `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleQueryResult) Reset()         { *m = RoleQueryResult{} }
func (m *RoleQueryResult) String() string { return proto.CompactTextString(m) }
func (*RoleQueryResult) ProtoMessage()    {}
func (*RoleQueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_18026eeb4b7aa985, []int{3}
}

func (m *RoleQueryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleQueryResult.Unmarshal(m, b)
}
func (m *RoleQueryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleQueryResult.Marshal(b, m, deterministic)
}
func (m *RoleQueryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleQueryResult.Merge(m, src)
}
func (m *RoleQueryResult) XXX_Size() int {
	return xxx_messageInfo_RoleQueryResult.Size(m)
}
func (m *RoleQueryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleQueryResult.DiscardUnknown(m)
}

var xxx_messageInfo_RoleQueryResult proto.InternalMessageInfo

func (m *RoleQueryResult) GetState() *iok200_blada_pb.ResultState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *RoleQueryResult) GetPage() *iok200_blada_pb.PageResult {
	if m != nil {
		return m.Page
	}
	return nil
}

func (m *RoleQueryResult) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type RoleBindAuthRequest struct {
	// 角色ID
	RoleId string `protobuf:"bytes,1,opt,name=roleId,proto3" json:"roleId,omitempty"`
	// 权限ID
	AuthIds              []string `protobuf:"bytes,2,rep,name=authIds,proto3" json:"authIds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RoleBindAuthRequest) Reset()         { *m = RoleBindAuthRequest{} }
func (m *RoleBindAuthRequest) String() string { return proto.CompactTextString(m) }
func (*RoleBindAuthRequest) ProtoMessage()    {}
func (*RoleBindAuthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18026eeb4b7aa985, []int{4}
}

func (m *RoleBindAuthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBindAuthRequest.Unmarshal(m, b)
}
func (m *RoleBindAuthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBindAuthRequest.Marshal(b, m, deterministic)
}
func (m *RoleBindAuthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBindAuthRequest.Merge(m, src)
}
func (m *RoleBindAuthRequest) XXX_Size() int {
	return xxx_messageInfo_RoleBindAuthRequest.Size(m)
}
func (m *RoleBindAuthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBindAuthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBindAuthRequest proto.InternalMessageInfo

func (m *RoleBindAuthRequest) GetRoleId() string {
	if m != nil {
		return m.RoleId
	}
	return ""
}

func (m *RoleBindAuthRequest) GetAuthIds() []string {
	if m != nil {
		return m.AuthIds
	}
	return nil
}

func init() {
	proto.RegisterType((*RoleCreateRequest)(nil), "iok200.okmax.admin.RoleCreateRequest")
	proto.RegisterType((*RoleUpdateRequest)(nil), "iok200.okmax.admin.RoleUpdateRequest")
	proto.RegisterType((*RoleQueryRequest)(nil), "iok200.okmax.admin.RoleQueryRequest")
	proto.RegisterType((*RoleQueryResult)(nil), "iok200.okmax.admin.RoleQueryResult")
	proto.RegisterType((*RoleBindAuthRequest)(nil), "iok200.okmax.admin.RoleBindAuthRequest")
}

func init() {
	proto.RegisterFile("iok200.okmax.admin.role.proto", fileDescriptor_18026eeb4b7aa985)
}

var fileDescriptor_18026eeb4b7aa985 = []byte{
	// 436 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xc1, 0xaf, 0xd2, 0x40,
	0x10, 0xc6, 0x5f, 0xe9, 0x03, 0x1f, 0x83, 0x89, 0xba, 0x26, 0xa6, 0x36, 0xd1, 0x34, 0x55, 0x23,
	0x07, 0x29, 0x04, 0x6f, 0xc6, 0x0b, 0xa8, 0x31, 0x3d, 0x68, 0x64, 0xd1, 0x8b, 0x1e, 0xc8, 0x96,
	0x5d, 0xa1, 0xa1, 0xed, 0xd6, 0x76, 0x6b, 0xc4, 0x7f, 0xc5, 0x9b, 0x7f, 0xa9, 0xd9, 0xdd, 0xae,
	0x02, 0x52, 0x30, 0x1e, 0x27, 0xdf, 0xb7, 0xbf, 0xf9, 0x3a, 0x33, 0x85, 0x7b, 0x31, 0xdf, 0x8c,
	0x47, 0xa3, 0x80, 0x6f, 0x52, 0xf2, 0x2d, 0x20, 0x34, 0x8d, 0xb3, 0xa0, 0xe0, 0x09, 0x0b, 0xf2,
	0x82, 0x0b, 0x8e, 0xd0, 0xdf, 0xb2, 0x7b, 0x7d, 0xc9, 0xd3, 0x94, 0x67, 0xda, 0xe1, 0xde, 0x3f,
	0x02, 0x48, 0x39, 0x65, 0x89, 0xd6, 0xfd, 0x4f, 0x70, 0x0b, 0xf3, 0x84, 0xbd, 0x28, 0x18, 0x11,
	0x0c, 0xb3, 0x2f, 0x15, 0x2b, 0x05, 0x7a, 0x02, 0x97, 0xb2, 0x89, 0x63, 0x79, 0x56, 0xbf, 0x37,
	0x76, 0x82, 0x23, 0x0c, 0xf9, 0x08, 0x2b, 0x17, 0x72, 0xe0, 0x1a, 0xa9, 0xc4, 0x3a, 0xa4, 0xa5,
	0xd3, 0xf2, 0xec, 0x7e, 0x17, 0x9b, 0xd2, 0x9f, 0x68, 0xf8, 0x87, 0x9c, 0xfe, 0x2f, 0xdc, 0xff,
	0x0e, 0x37, 0x65, 0x35, 0xab, 0x58, 0xb1, 0x35, 0x84, 0x00, 0x2e, 0x73, 0xb2, 0x32, 0x04, 0xd7,
	0x10, 0xea, 0xef, 0x7e, 0x47, 0x56, 0xa6, 0x17, 0x56, 0x3e, 0xe4, 0xc2, 0x95, 0x64, 0xbd, 0x25,
	0x29, 0x73, 0x5a, 0x9e, 0xd5, 0xef, 0xe2, 0xdf, 0xb5, 0xd1, 0xc2, 0xec, 0x33, 0x77, 0xec, 0x3f,
	0x9a, 0xac, 0xfd, 0x9f, 0x16, 0xdc, 0xd8, 0x69, 0x5e, 0x56, 0x89, 0x40, 0x23, 0x68, 0x97, 0x82,
	0x88, 0xa6, 0xe6, 0xda, 0x35, 0x97, 0x0e, 0xac, 0x8d, 0x68, 0x50, 0xa7, 0x6d, 0xa9, 0x07, 0x77,
	0x8f, 0xa6, 0x95, 0x8f, 0xea, 0xb0, 0x01, 0xb4, 0x65, 0x80, 0xd2, 0xb1, 0x3d, 0xfb, 0xe4, 0x7c,
	0xb4, 0xcd, 0x7f, 0x0d, 0xb7, 0x65, 0x39, 0x8d, 0x33, 0x3a, 0xa9, 0xc4, 0xda, 0xcc, 0xe8, 0x0e,
	0x74, 0xd4, 0x77, 0x50, 0x15, 0xb4, 0x8b, 0xeb, 0xaa, 0x79, 0x59, 0xe3, 0x1f, 0x36, 0xf4, 0x24,
	0x69, 0xce, 0x8a, 0xaf, 0xf1, 0x92, 0xa1, 0x37, 0xd0, 0xd1, 0x57, 0x81, 0x1e, 0x35, 0x65, 0xd8,
	0xbb, 0x1a, 0xf7, 0xc4, 0x2c, 0xfc, 0x0b, 0x89, 0xd3, 0x77, 0xd0, 0x8c, 0xdb, 0xbb, 0x93, 0x33,
	0xb8, 0x57, 0x00, 0x2f, 0x59, 0xc2, 0x04, 0x9b, 0x6e, 0x43, 0x8a, 0x0e, 0xa7, 0x1a, 0xd2, 0xf2,
	0xdf, 0x30, 0xef, 0xa1, 0xad, 0xb6, 0x8b, 0x1e, 0x36, 0x85, 0xda, 0xbd, 0x3c, 0xf7, 0xc1, 0x19,
	0x97, 0x44, 0xfb, 0x17, 0x68, 0x06, 0x57, 0x66, 0x1f, 0xe8, 0x71, 0xd3, 0x93, 0x83, 0x8d, 0x9d,
	0x0e, 0x3a, 0x7d, 0xfe, 0xf1, 0xd9, 0x2a, 0x16, 0xeb, 0x2a, 0x92, 0xf2, 0x50, 0x3b, 0x87, 0x0a,
	0x39, 0x50, 0xc8, 0x01, 0xc9, 0xe3, 0x61, 0x1e, 0xd5, 0xca, 0x42, 0x29, 0x0b, 0xa5, 0x2c, 0xf2,
	0x28, 0xea, 0xa8, 0x9f, 0xfd, 0xe9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfc, 0x53, 0xf6, 0x88,
	0x4f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RoleServiceClient is the client API for RoleService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RoleServiceClient interface {
	// 创建
	Create(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error)
	// 修改
	Update(ctx context.Context, in *RoleUpdateRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error)
	// ID删除
	DeleteById(ctx context.Context, in *iok200_blada_pb.IdsRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error)
	// 查询
	Query(ctx context.Context, in *RoleQueryRequest, opts ...grpc.CallOption) (*RoleQueryResult, error)
	// 绑定权限
	BindAuth(ctx context.Context, in *RoleBindAuthRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error)
}

type roleServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRoleServiceClient(cc grpc.ClientConnInterface) RoleServiceClient {
	return &roleServiceClient{cc}
}

func (c *roleServiceClient) Create(ctx context.Context, in *RoleCreateRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error) {
	out := new(iok200_blada_pb.ResultState)
	err := c.cc.Invoke(ctx, "/iok200.okmax.admin.RoleService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) Update(ctx context.Context, in *RoleUpdateRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error) {
	out := new(iok200_blada_pb.ResultState)
	err := c.cc.Invoke(ctx, "/iok200.okmax.admin.RoleService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) DeleteById(ctx context.Context, in *iok200_blada_pb.IdsRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error) {
	out := new(iok200_blada_pb.ResultState)
	err := c.cc.Invoke(ctx, "/iok200.okmax.admin.RoleService/DeleteById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) Query(ctx context.Context, in *RoleQueryRequest, opts ...grpc.CallOption) (*RoleQueryResult, error) {
	out := new(RoleQueryResult)
	err := c.cc.Invoke(ctx, "/iok200.okmax.admin.RoleService/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *roleServiceClient) BindAuth(ctx context.Context, in *RoleBindAuthRequest, opts ...grpc.CallOption) (*iok200_blada_pb.ResultState, error) {
	out := new(iok200_blada_pb.ResultState)
	err := c.cc.Invoke(ctx, "/iok200.okmax.admin.RoleService/BindAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RoleServiceServer is the server API for RoleService service.
type RoleServiceServer interface {
	// 创建
	Create(context.Context, *RoleCreateRequest) (*iok200_blada_pb.ResultState, error)
	// 修改
	Update(context.Context, *RoleUpdateRequest) (*iok200_blada_pb.ResultState, error)
	// ID删除
	DeleteById(context.Context, *iok200_blada_pb.IdsRequest) (*iok200_blada_pb.ResultState, error)
	// 查询
	Query(context.Context, *RoleQueryRequest) (*RoleQueryResult, error)
	// 绑定权限
	BindAuth(context.Context, *RoleBindAuthRequest) (*iok200_blada_pb.ResultState, error)
}

// UnimplementedRoleServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRoleServiceServer struct {
}

func (*UnimplementedRoleServiceServer) Create(ctx context.Context, req *RoleCreateRequest) (*iok200_blada_pb.ResultState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRoleServiceServer) Update(ctx context.Context, req *RoleUpdateRequest) (*iok200_blada_pb.ResultState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRoleServiceServer) DeleteById(ctx context.Context, req *iok200_blada_pb.IdsRequest) (*iok200_blada_pb.ResultState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteById not implemented")
}
func (*UnimplementedRoleServiceServer) Query(ctx context.Context, req *RoleQueryRequest) (*RoleQueryResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedRoleServiceServer) BindAuth(ctx context.Context, req *RoleBindAuthRequest) (*iok200_blada_pb.ResultState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindAuth not implemented")
}

func RegisterRoleServiceServer(s *grpc.Server, srv RoleServiceServer) {
	s.RegisterService(&_RoleService_serviceDesc, srv)
}

func _RoleService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iok200.okmax.admin.RoleService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).Create(ctx, req.(*RoleCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iok200.okmax.admin.RoleService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).Update(ctx, req.(*RoleUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_DeleteById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(iok200_blada_pb.IdsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).DeleteById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iok200.okmax.admin.RoleService/DeleteById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).DeleteById(ctx, req.(*iok200_blada_pb.IdsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iok200.okmax.admin.RoleService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).Query(ctx, req.(*RoleQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RoleService_BindAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoleBindAuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RoleServiceServer).BindAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/iok200.okmax.admin.RoleService/BindAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RoleServiceServer).BindAuth(ctx, req.(*RoleBindAuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RoleService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "iok200.okmax.admin.RoleService",
	HandlerType: (*RoleServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _RoleService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RoleService_Update_Handler,
		},
		{
			MethodName: "DeleteById",
			Handler:    _RoleService_DeleteById_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _RoleService_Query_Handler,
		},
		{
			MethodName: "BindAuth",
			Handler:    _RoleService_BindAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "iok200.okmax.admin.role.proto",
}
